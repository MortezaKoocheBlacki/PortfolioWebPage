داکیومنتیشن کامپوننت MobileNavigation
این مستندات، کامپوننت MobileNavigation را که یک منوی ناوبری (Navigation Menu) مخصوص موبایل است، توضیح می‌دهد. این کامپوننت به طور خودکار بر اساس اندازه صفحه نمایش (با عرض کمتر یا مساوی 650px) نمایش داده می‌شود و وضعیت لینک‌های فعال را با یک نشانگر متحرک و ویژگی‌های دسترس‌پذیری (Accessibility) نمایش می‌دهد.

	۱. هدف (Purpose)
کامپوننت MobileNavigation یک نوار ناوبری پایین صفحه برای دستگاه‌های موبایل است. هدف اصلی آن فراهم کردن دسترسی سریع و آسان به صفحات اصلی وب‌سایت در اندازه‌های کوچک صفحه نمایش است. این کامپوننت با استفاده از Next.js Router، لینک فعال را شناسایی کرده و با انیمیشن CSS و ویژگی‌های aria-label و aria-current، تجربه کاربری و دسترس‌پذیری را بهبود می‌بخشد.

	۲. تکنولوژی‌ها و وابستگی‌ها (Technologies and Dependencies)
React: برای ساخت رابط کاربری.
Next.js: برای مدیریت مسیریابی (Routing) با استفاده از useRouter و Link.
React Icons: برای آیکون‌های ناوبری (مانند FaHome, FaQuestion, GoProjectSymlink و غیره).
CSS Modules: برای استایل‌دهی منحصر به فرد به کامپوننت با استفاده از فایل MobileNavigation.module.css.

	۳. ساختار و منطق اصلی (Core Structure and Logic)
این کامپوننت از هوک‌ها (Hooks) و توابع زیر برای مدیریت وضعیت و منطق خود استفاده می‌کند:

useState:
activeIndex: ایندکس آیتم فعال فعلی.
isVisible: مقدار بولین برای نمایش یا پنهان کردن منو بر اساس اندازه صفحه.
translateConstant: عرض هر آیتم ناوبری برای محاسبه موقعیت نشانگر متحرک.
useRef:
navRef: یک رفرنس برای دسترسی مستقیم به المنت <ul> در DOM که برای محاسبه عرض هر آیتم استفاده می‌شود.
useEffect:
handleResize: این تابع با تغییر اندازه صفحه، نمایش یا پنهان کردن منو را مدیریت کرده و عرض هر آیتم را برای حرکت نشانگر محاسبه می‌کند.
handleRouteChange: این تابع به رویداد routeChangeComplete در Next.js گوش می‌دهد و activeIndex را بر اساس مسیر جدید به‌روزرسانی می‌کند. این تابع همچنین مسیرهای فرزند (مانند /ProjectsPage/1) را با آدرس‌های پایه (/ProjectsPage) تطبیق می‌دهد.

	۴. عناصر کلیدی (Key Elements)
navItems: آرایه‌ای از آبجکت‌ها که هر آیتم ناوبری را با icon, label و address تعریف می‌کند.

Indicator: المان <div> با کلاس indicator که با استفاده از transform: translateX() و translateConstant، به صورت پویا به زیر آیتم فعال منتقل می‌شود.
لینک‌ها: هر لینک با استفاده از کامپوننت <Link> از Next.js ساخته شده که مسیریابی بهینه را تضمین می‌کند.

	5. ویژگی‌های دسترس‌پذیری:
role="navigation": برای مشخص کردن نقش المنت <ul> به عنوان یک بخش ناوبری.
aria-label: برای ارائه یک نام توصیفی برای لینک‌ها و کل منو، که برای صفحه‌خوان‌ها (Screen Readers) ضروری است.
aria-current="page": برای نشان دادن ایندکس فعال به صفحه‌خوان‌ها.


	۶. ملاحظات (Considerations)
طراحی واکنش‌گرا (Responsive): این کامپوننت تنها در صفحاتی با عرض کمتر یا مساوی 650px نمایش داده می‌شود. برای تغییر این مقدار، تابع handleResize را اصلاح کنید.
استایلینگ: تمام استایل‌ها در فایل MobileNavigation.module.css قرار دارند.
بهبود دسترس‌پذیری (Accessibility): استفاده از aria-label و aria-current این کامپوننت را برای کاربران دارای معلولیت‌های بینایی و صفحه‌خوان‌ها قابل استفاده‌تر می‌کند.
